(1)
Здравствуйте, меня зовут Адам, я представляю Название команды. Наш кейс -- многопользовательский чат, и так как по
условию это консольное приложение, презентацию мы тоже решили сделать в консоли. Наш проект называется Chatile.

(2)
Итак, сначала я расскажу про нашу архитектуру. Мы не умеем писать на Джаве, но мы любим нарушать правила. Но мы решили
не упрощать себе задачу и пользоваться теми же инструментами, которые были в условии, но на питоне и других инструментах.

Мы использовали питон для сервера, планировали использовать Go для клиента, но об этом чуть попозже. В качестве БД
мы взяли SQLite3, и использовали ORM от SQLAlchemy. Для тестирования и создания вспомогательных инструментов мы
использовали C++.

И, конечно, мы используем чистые TCP-сокеты.

(3)
Итак, начнём с первой вещи, которую мы разработали на бумаге ещё до того, как существовал сервер и клиент. Это -- наш
протокол для сообщений, который мы назвали MTP. Конечно, протокол -- это преувеличенное название, это, можно сказать,
формат для общения клиента и сервера. Но этим занимался конкретный участник команды.

(4)
Вот, например, я привёл часть документации для передачи информации от клиента к серверу.

(5)
Итак, теперь я расскажу про реализацию. Точнее, покажу.

...
Регистируюсь
Ввожу имя пользователя
Показываются сообщения

Важно то, что для обмена сообщениями обоим пользователям не нужно быть онлайн. Так как у нас есть прослойка через
сервер и БД, вся история сообщений сохраняется на сервере и подгружается, когда пользователь заходит, он видит все те
сообщения, которые написал ему собеседник в период офлайна.

(6)
Конечно, получилось не всё.

1: из-за недостатка времени не получилось реализовать дополнительные функции,
2: планировали написать на Go, но из-за резкой смены архитектуры пришлось переписать на питон.

Но в целом, мы считаем, что справились с задачей и сделали минимальный жизнеспособный продукт.
(7)
Это всё, спасибо